##############################################################################
#
# Polylib - Polygon Management Library
#
# Copyright (c) 2010-2011 VCAD System Research Program, RIKEN. 
# All rights reserved.
# 
# Copyright (c) 2012-2016 Advanced Institute for Computational Science, RIKEN.
# All rights reserved.
#
##############################################################################
#
#  At first, edit MACRO, then make

# サブディレクトリ
SUBDIRS_TEST_CXX     = file_io_stl file_io_npt attribute load_reduce_mem move_polygon multi_bbox search_polygon
SUBDIRS_TEST_C       = c_interface
SUBDIRS_TEST_FORTRAN = f_interface
SUBDIRS = $(SUBDIRS_TEST_CXX) $(SUBDIRS_TEST_C) $(SUBDIRS_TEST_FORTRAN)

# Command
RM          = \rm -f

# Directory
FFV_HOME=/usr/local
MPI_DIR     =
PL_DIR      = $(FFV_HOME)/Polylib
TP_DIR      = $(FFV_HOME)/TextParser
NPT_DIR     = $(FFV_HOME)/Nptlib

# Compile Options
MPI_OPT     = -DMPI_PL
REAL_OPT    =
OMP_FLAGS   =
FLAGS_ADD   =

# Libraries
LIB_MPI=
LIB_PL=$(PL_DIR)/lib/libPOLYmpi.a
LIB_TP=$(TP_DIR)/lib/libTPmpi.a
LIB_NPT=$(NPT_DIR)/lib/libNpatch.a
LIBS_ADD=
LIBS_ADD_C=
LIBS_ADD_F=--linkfortran

LIBS=$(LIB_PL) $(LIB_TP) $(LIB_NPT) $(LIB_MPI) $(LIBS_ADD)
LIBS_C=$(LIBS) $(LIBS_ADD_C)
LIBS_F=$(LIBS) $(LIBS_ADD_F)

# Include
INCLUDE_MPI=
INCLUDE_PL=-I$(PL_DIR)/include
INCLUDE_TP=-I$(TP_DIR)/include
INCLUDE_NPT=-I$(NPT_DIR)/include
INCLUDE_ADD=-I../include
INCLUDE_ADD_F=-I$(PL_DIR)/include/f_lang
INCLUDE=$(INCLUDE_PL) $(INCLUDE_TP) $(INCLUDE_NPT) $(INCLUDE_MPI) $(INCLUDE_ADD)
INCLUDE_F=$(INCLUDE) $(INCLUDE_ADD_F)

# Compiler & Compile Options
CXX=mpiFCCpx
CXXFLAGS  = -Kfast,ocl,preex,simd=2,array_private,parallel,openmp,optmsg=2 -V -Nsrc -x0 $(MPI_OPT) $(REAL_OPT) $(OMP_FLAGS) $(FLAGS_ADD)
CC=mpifccpx
CFLAGS    = -Kfast,ocl,preex,simd=2,array_private,parallel,openmp,optmsg=2 -V -Nsrc -x0 $(MPI_OPT) $(REAL_OPT) $(OMP_FLAGS) $(FLAGS_ADD)
FC=mpifrtpx
FFLAGS    = -Kfast,ocl,preex,simd=2,array_private,parallel,openmp,optmsg=2 -V $(MPI_OPT) $(REAL_OPT) $(OMP_FLAGS) $(FLAGS_ADD)

# Linker & Linkage Options
LD_CXX=$(CXX)
LD_C=mpiFCCpx
LD_F=mpiFCCpx

LDFLAGS= -Kfast,parallel,openmp

# check 時の実行shell
#   バッチ処理, stagein/stageout 未対応
RUN_SHELL=../test_run_mpiexec.sh

#--------------------------------------
all: cxx_apl  c_apl  f_apl

cxx_apl:
	@for subdir in $(SUBDIRS_TEST_CXX) ; do \
		(cd $$subdir && make -f Makefile_hand CXX='$(CXX)' CXXFLAGS='$(CXXFLAGS)' LD='$(LD_CXX)' INCLUDE='$(INCLUDE)' LDFLAGS='$(LDFLAGS)' LIBS='$(LIBS)' ) ;\
	done

c_apl:
	@for subdir in $(SUBDIRS_TEST_C) ; do \
		(cd $$subdir && make -f Makefile_hand CC='$(CC)' CFLAGS='$(CFLAGS)' INCLUDE='$(INCLUDE)' LD='$(LD_C)' LDFLAGS='$(LDFLAGS)' LIBS='$(LIBS_C)' ) ;\
	done

f_apl:
	@for subdir in $(SUBDIRS_TEST_FORTRAN) ; do \
		(cd $$subdir && make -f Makefile_hand FC='$(FC)' FFLAGS='$(FFLAGS)' INCLUDE='$(INCLUDE_F)' LD='$(LD_F)' LDFLAGS='$(LDFLAGS)' LIBS='$(LIBS_F)' ) ;\
	done

check:
	@for subdir in $(SUBDIRS) ; do \
		(cd $$subdir && make -f Makefile_hand check RUN_SHELL='$(RUN_SHELL)' ) ;\
	done

clean:
	@for subdir in $(SUBDIRS) ; do \
		(cd $$subdir && make -f Makefile_hand clean RM='$(RM)' ) ;\
	done

